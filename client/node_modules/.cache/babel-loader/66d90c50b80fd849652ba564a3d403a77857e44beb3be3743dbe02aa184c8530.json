{"ast":null,"code":"var _jsxFileName = \"F:\\\\team4\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Scanner from './Scanner';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Simulated user database\nconst MOCK_USERS = {\n  '12345678': {\n    userId: '12345678',\n    cardId: 'CARD001',\n    name: 'John Doe',\n    department: 'Computer Science',\n    password: '1234'\n  },\n  '87654321': {\n    userId: '87654321',\n    cardId: 'CARD002',\n    name: 'Jane Smith',\n    department: 'Engineering',\n    password: '4321'\n  }\n};\nfunction App() {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [user, setUser] = useState(null);\n  const [cardInput, setCardInput] = useState('');\n  const [password, setPassword] = useState('');\n  const [scanning, setScanning] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLocked, setIsLocked] = useState(true);\n  const [foundUser, setFoundUser] = useState(null);\n  useEffect(() => {\n    if (user) {\n      const fetchRecords = async () => {\n        try {\n          const response = await fetch('http://localhost:3001/api/attendance');\n          const data = await response.json();\n          setRecords(data);\n          setLoading(false);\n        } catch (err) {\n          console.error('Error fetching records:', err);\n          setError('Failed to fetch attendance records');\n          setLoading(false);\n        }\n      };\n      const interval = setInterval(fetchRecords, 5000);\n      fetchRecords();\n      return () => clearInterval(interval);\n    }\n  }, [user]);\n  const simulateCardScan = () => {\n    setScanning(true);\n    // Simulate card scanning process\n    setTimeout(() => {\n      const randomUser = Object.values(MOCK_USERS)[Math.floor(Math.random() * Object.values(MOCK_USERS).length)];\n      setFoundUser(randomUser);\n      setShowPassword(true);\n      setScanning(false);\n    }, 1500);\n  };\n  const handleManualLogin = e => {\n    e.preventDefault();\n    const user = MOCK_USERS[cardInput];\n    if (user) {\n      setFoundUser(user);\n      setShowPassword(true);\n    } else {\n      setError('Invalid card or user ID');\n    }\n  };\n  const handlePasswordSubmit = e => {\n    e.preventDefault();\n    if (foundUser && password === foundUser.password) {\n      setIsLocked(false);\n      // Simulate unlock animation\n      setTimeout(() => {\n        handleLogin(foundUser);\n      }, 1000);\n    } else {\n      setError('Invalid password');\n      setPassword('');\n    }\n  };\n  const handleLogin = user => {\n    setUser(user);\n    setError(null);\n    recordAttendance(user);\n    // Reset states\n    setFoundUser(null);\n    setPassword('');\n    setShowPassword(false);\n    setIsLocked(true);\n  };\n  const recordAttendance = async user => {\n    try {\n      const response = await fetch('http://localhost:3001/api/attendance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          timestamp: new Date().toISOString(),\n          status: 'Present',\n          userId: user.userId,\n          cardId: user.cardId,\n          userName: user.name,\n          department: user.department\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to record attendance');\n      }\n      const newRecord = await response.json();\n      setRecords(prev => [newRecord, ...prev]);\n    } catch (err) {\n      console.error('Error recording attendance:', err);\n      setError('Failed to record attendance');\n    }\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setRecords([]);\n    setCardInput('');\n    setPassword('');\n    setShowPassword(false);\n    setIsLocked(true);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Scanner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading attendance system...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"AI Attendance System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"ID: \", user.userId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Name: \", user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Dept: \", user.department]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"logout-button\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Automatic Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator active\",\n          children: \"System Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => recordAttendance(user),\n          className: \"record-button\",\n          children: \"Record Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"records-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"records-list\",\n          children: records.map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"record-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"record-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"record-time\",\n                children: new Date(record.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"record-user\",\n                children: record.userName || record.userId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"record-department\",\n                children: record.department\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"record-status\",\n              children: record.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+My+Vxlun4VQkvv2cWAeBg3mhL0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Scanner","jsxDEV","_jsxDEV","MOCK_USERS","userId","cardId","name","department","password","App","_s","records","setRecords","loading","setLoading","error","setError","user","setUser","cardInput","setCardInput","setPassword","scanning","setScanning","showPassword","setShowPassword","isLocked","setIsLocked","foundUser","setFoundUser","fetchRecords","response","fetch","data","json","err","console","interval","setInterval","clearInterval","simulateCardScan","setTimeout","randomUser","Object","values","Math","floor","random","length","handleManualLogin","e","preventDefault","handlePasswordSubmit","handleLogin","recordAttendance","method","headers","body","JSON","stringify","timestamp","Date","toISOString","status","userName","ok","Error","newRecord","prev","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","record","toLocaleTimeString","id","_c","$RefreshReg$"],"sources":["F:/team4/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Scanner from './Scanner';\r\nimport './App.css';\r\n\r\ninterface AttendanceRecord {\r\n  id: string;\r\n  timestamp: string;\r\n  status: string;\r\n  userId: string;\r\n  cardId: string;\r\n  userName?: string;\r\n  department?: string;\r\n}\r\n\r\ninterface User {\r\n  userId: string;\r\n  cardId: string;\r\n  name: string;\r\n  department: string;\r\n  password: string;\r\n}\r\n\r\n// Simulated user database\r\nconst MOCK_USERS: { [key: string]: User } = {\r\n  '12345678': {\r\n    userId: '12345678',\r\n    cardId: 'CARD001',\r\n    name: 'John Doe',\r\n    department: 'Computer Science',\r\n    password: '1234'\r\n  },\r\n  '87654321': {\r\n    userId: '87654321',\r\n    cardId: 'CARD002',\r\n    name: 'Jane Smith',\r\n    department: 'Engineering',\r\n    password: '4321'\r\n  }\r\n};\r\n\r\nfunction App(): JSX.Element {\r\n  const [records, setRecords] = useState<AttendanceRecord[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [cardInput, setCardInput] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [scanning, setScanning] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLocked, setIsLocked] = useState(true);\r\n  const [foundUser, setFoundUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const fetchRecords = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:3001/api/attendance');\r\n          const data = await response.json();\r\n          setRecords(data);\r\n          setLoading(false);\r\n        } catch (err) {\r\n          console.error('Error fetching records:', err);\r\n          setError('Failed to fetch attendance records');\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      const interval = setInterval(fetchRecords, 5000);\r\n      fetchRecords();\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [user]);\r\n\r\n  const simulateCardScan = () => {\r\n    setScanning(true);\r\n    // Simulate card scanning process\r\n    setTimeout(() => {\r\n      const randomUser = Object.values(MOCK_USERS)[Math.floor(Math.random() * Object.values(MOCK_USERS).length)];\r\n      setFoundUser(randomUser);\r\n      setShowPassword(true);\r\n      setScanning(false);\r\n    }, 1500);\r\n  };\r\n\r\n  const handleManualLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const user = MOCK_USERS[cardInput];\r\n    if (user) {\r\n      setFoundUser(user);\r\n      setShowPassword(true);\r\n    } else {\r\n      setError('Invalid card or user ID');\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (foundUser && password === foundUser.password) {\r\n      setIsLocked(false);\r\n      // Simulate unlock animation\r\n      setTimeout(() => {\r\n        handleLogin(foundUser);\r\n      }, 1000);\r\n    } else {\r\n      setError('Invalid password');\r\n      setPassword('');\r\n    }\r\n  };\r\n\r\n  const handleLogin = (user: User) => {\r\n    setUser(user);\r\n    setError(null);\r\n    recordAttendance(user);\r\n    // Reset states\r\n    setFoundUser(null);\r\n    setPassword('');\r\n    setShowPassword(false);\r\n    setIsLocked(true);\r\n  };\r\n\r\n  const recordAttendance = async (user: User) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/attendance', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          timestamp: new Date().toISOString(),\r\n          status: 'Present',\r\n          userId: user.userId,\r\n          cardId: user.cardId,\r\n          userName: user.name,\r\n          department: user.department\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to record attendance');\r\n      }\r\n\r\n      const newRecord = await response.json();\r\n      setRecords(prev => [newRecord, ...prev]);\r\n    } catch (err) {\r\n      console.error('Error recording attendance:', err);\r\n      setError('Failed to record attendance');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    setRecords([]);\r\n    setCardInput('');\r\n    setPassword('');\r\n    setShowPassword(false);\r\n    setIsLocked(true);\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Scanner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"loading\">Loading attendance system...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"header-content\">\r\n          <h1>AI Attendance System</h1>\r\n          <div className=\"user-info\">\r\n            <div className=\"user-details\">\r\n              <div>ID: {user.userId}</div>\r\n              <div>Name: {user.name}</div>\r\n              <div>Dept: {user.department}</div>\r\n            </div>\r\n            <button onClick={handleLogout} className=\"logout-button\">\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"status-container\">\r\n          <h2>Automatic Attendance</h2>\r\n          <div className=\"status-indicator active\">\r\n            System Active\r\n          </div>\r\n          <button onClick={() => recordAttendance(user)} className=\"record-button\">\r\n            Record Attendance\r\n          </button>\r\n        </div>\r\n        <div className=\"records-container\">\r\n          <h3>Recent Records</h3>\r\n          <div className=\"records-list\">\r\n            {records.map((record: AttendanceRecord) => (\r\n              <div key={record.id} className=\"record-item\">\r\n                <div className=\"record-details\">\r\n                  <span className=\"record-time\">\r\n                    {new Date(record.timestamp).toLocaleTimeString()}\r\n                  </span>\r\n                  <span className=\"record-user\">\r\n                    {record.userName || record.userId}\r\n                  </span>\r\n                  <span className=\"record-department\">\r\n                    {record.department}\r\n                  </span>\r\n                </div>\r\n                <span className=\"record-status\">\r\n                  {record.status}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}