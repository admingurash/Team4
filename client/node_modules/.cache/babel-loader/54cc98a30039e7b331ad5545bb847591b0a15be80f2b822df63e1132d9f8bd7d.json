{"ast":null,"code":"var _jsxFileName = \"F:\\\\team4\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Scanner from './Scanner';\nimport Admin from './Admin';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Simulated user database\nconst MOCK_USERS = {\n  '12345678': {\n    userId: '12345678',\n    cardId: 'CARD001',\n    name: 'John Doe',\n    department: 'Computer Science',\n    password: '1234'\n  },\n  '87654321': {\n    userId: '87654321',\n    cardId: 'CARD002',\n    name: 'Jane Smith',\n    department: 'Engineering',\n    password: '4321'\n  }\n};\nfunction App() {\n  _s();\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [user, setUser] = useState(null);\n  const [cardInput, setCardInput] = useState('');\n  const [password, setPassword] = useState('');\n  const [scanning, setScanning] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLocked, setIsLocked] = useState(true);\n  const [foundUser, setFoundUser] = useState(null);\n  const [qrCode, setQrCode] = useState('');\n  useEffect(() => {\n    if (user) {\n      const fetchRecords = async () => {\n        try {\n          const response = await fetch('http://localhost:3000/api/attendance');\n          const data = await response.json();\n          setRecords(data);\n          setLoading(false);\n        } catch (err) {\n          console.error('Error fetching records:', err);\n          setError('Failed to fetch attendance records');\n          setLoading(false);\n        }\n      };\n      const interval = setInterval(fetchRecords, 5000);\n      fetchRecords();\n      return () => clearInterval(interval);\n    }\n  }, [user]);\n  useEffect(() => {\n    const generateQRCode = async () => {\n      if (user) {\n        try {\n          const response = await fetch(`http://localhost:3000/api/qr?data=${encodeURIComponent(JSON.stringify({\n            userId: user.userId,\n            name: user.name,\n            department: user.department\n          }))}`);\n          const data = await response.json();\n          setQrCode(data.qrCode);\n        } catch (err) {\n          console.error('Error generating QR code:', err);\n          setError('Failed to generate QR code');\n        }\n      }\n    };\n    generateQRCode();\n  }, [user]);\n  const simulateCardScan = () => {\n    setScanning(true);\n    // Simulate card scanning process\n    setTimeout(() => {\n      const randomUser = Object.values(MOCK_USERS)[Math.floor(Math.random() * Object.values(MOCK_USERS).length)];\n      setFoundUser(randomUser);\n      setShowPassword(true);\n      setScanning(false);\n    }, 1500);\n  };\n  const handleManualLogin = e => {\n    e.preventDefault();\n    const user = MOCK_USERS[cardInput];\n    if (user) {\n      setFoundUser(user);\n      setShowPassword(true);\n    } else {\n      setError('Invalid card or user ID');\n    }\n  };\n  const handlePasswordSubmit = e => {\n    e.preventDefault();\n    if (foundUser && password === foundUser.password) {\n      setIsLocked(false);\n      // Simulate unlock animation\n      setTimeout(() => {\n        handleLogin(foundUser);\n      }, 1000);\n    } else {\n      setError('Invalid password');\n      setPassword('');\n    }\n  };\n  const handleLogin = user => {\n    setUser(user);\n    setError(null);\n    recordAttendance(user);\n    // Reset states\n    setFoundUser(null);\n    setPassword('');\n    setShowPassword(false);\n    setIsLocked(true);\n  };\n  const recordAttendance = async user => {\n    try {\n      const response = await fetch('http://localhost:3000/api/attendance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          timestamp: new Date().toISOString(),\n          status: 'Present',\n          userId: user.userId,\n          cardId: user.cardId,\n          userName: user.name,\n          department: user.department\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to record attendance');\n      }\n      const newRecord = await response.json();\n      setRecords(prev => [newRecord, ...prev]);\n    } catch (err) {\n      console.error('Error recording attendance:', err);\n      setError('Failed to record attendance');\n    }\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setRecords([]);\n    setCardInput('');\n    setPassword('');\n    setShowPassword(false);\n    setIsLocked(true);\n    setQrCode('');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/scanner\",\n          element: /*#__PURE__*/_jsxDEV(Scanner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: isMobile ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), user && qrCode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qr-code-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: qrCode,\n          alt: \"QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RLvV1Ybi2gA2PNu3z7ASCJeYflM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","Scanner","Admin","jsxDEV","_jsxDEV","MOCK_USERS","userId","cardId","name","department","password","App","_s","isMobile","test","navigator","userAgent","records","setRecords","loading","setLoading","error","setError","user","setUser","cardInput","setCardInput","setPassword","scanning","setScanning","showPassword","setShowPassword","isLocked","setIsLocked","foundUser","setFoundUser","qrCode","setQrCode","fetchRecords","response","fetch","data","json","err","console","interval","setInterval","clearInterval","generateQRCode","encodeURIComponent","JSON","stringify","simulateCardScan","setTimeout","randomUser","Object","values","Math","floor","random","length","handleManualLogin","e","preventDefault","handlePasswordSubmit","handleLogin","recordAttendance","method","headers","body","timestamp","Date","toISOString","status","userName","ok","Error","newRecord","prev","handleLogout","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","_c","$RefreshReg$"],"sources":["F:/team4/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport Scanner from './Scanner';\r\nimport Admin from './Admin';\r\nimport './App.css';\r\n\r\ninterface AttendanceRecord {\r\n  id: string;\r\n  timestamp: string;\r\n  status: string;\r\n  userId: string;\r\n  cardId: string;\r\n  userName?: string;\r\n  department?: string;\r\n}\r\n\r\ninterface User {\r\n  userId: string;\r\n  cardId: string;\r\n  name: string;\r\n  department: string;\r\n  password: string;\r\n}\r\n\r\n// Simulated user database\r\nconst MOCK_USERS: { [key: string]: User } = {\r\n  '12345678': {\r\n    userId: '12345678',\r\n    cardId: 'CARD001',\r\n    name: 'John Doe',\r\n    department: 'Computer Science',\r\n    password: '1234'\r\n  },\r\n  '87654321': {\r\n    userId: '87654321',\r\n    cardId: 'CARD002',\r\n    name: 'Jane Smith',\r\n    department: 'Engineering',\r\n    password: '4321'\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  const [records, setRecords] = useState<AttendanceRecord[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [cardInput, setCardInput] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [scanning, setScanning] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLocked, setIsLocked] = useState(true);\r\n  const [foundUser, setFoundUser] = useState<User | null>(null);\r\n  const [qrCode, setQrCode] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const fetchRecords = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:3000/api/attendance');\r\n          const data = await response.json();\r\n          setRecords(data);\r\n          setLoading(false);\r\n        } catch (err) {\r\n          console.error('Error fetching records:', err);\r\n          setError('Failed to fetch attendance records');\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      const interval = setInterval(fetchRecords, 5000);\r\n      fetchRecords();\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const generateQRCode = async () => {\r\n      if (user) {\r\n        try {\r\n          const response = await fetch(`http://localhost:3000/api/qr?data=${encodeURIComponent(JSON.stringify({\r\n            userId: user.userId,\r\n            name: user.name,\r\n            department: user.department\r\n          }))}`);\r\n          const data = await response.json();\r\n          setQrCode(data.qrCode);\r\n        } catch (err) {\r\n          console.error('Error generating QR code:', err);\r\n          setError('Failed to generate QR code');\r\n        }\r\n      }\r\n    };\r\n\r\n    generateQRCode();\r\n  }, [user]);\r\n\r\n  const simulateCardScan = () => {\r\n    setScanning(true);\r\n    // Simulate card scanning process\r\n    setTimeout(() => {\r\n      const randomUser = Object.values(MOCK_USERS)[Math.floor(Math.random() * Object.values(MOCK_USERS).length)];\r\n      setFoundUser(randomUser);\r\n      setShowPassword(true);\r\n      setScanning(false);\r\n    }, 1500);\r\n  };\r\n\r\n  const handleManualLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const user = MOCK_USERS[cardInput];\r\n    if (user) {\r\n      setFoundUser(user);\r\n      setShowPassword(true);\r\n    } else {\r\n      setError('Invalid card or user ID');\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (foundUser && password === foundUser.password) {\r\n      setIsLocked(false);\r\n      // Simulate unlock animation\r\n      setTimeout(() => {\r\n        handleLogin(foundUser);\r\n      }, 1000);\r\n    } else {\r\n      setError('Invalid password');\r\n      setPassword('');\r\n    }\r\n  };\r\n\r\n  const handleLogin = (user: User) => {\r\n    setUser(user);\r\n    setError(null);\r\n    recordAttendance(user);\r\n    // Reset states\r\n    setFoundUser(null);\r\n    setPassword('');\r\n    setShowPassword(false);\r\n    setIsLocked(true);\r\n  };\r\n\r\n  const recordAttendance = async (user: User) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/attendance', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          timestamp: new Date().toISOString(),\r\n          status: 'Present',\r\n          userId: user.userId,\r\n          cardId: user.cardId,\r\n          userName: user.name,\r\n          department: user.department\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to record attendance');\r\n      }\r\n\r\n      const newRecord = await response.json();\r\n      setRecords(prev => [newRecord, ...prev]);\r\n    } catch (err) {\r\n      console.error('Error recording attendance:', err);\r\n      setError('Failed to record attendance');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    setRecords([]);\r\n    setCardInput('');\r\n    setPassword('');\r\n    setShowPassword(false);\r\n    setIsLocked(true);\r\n    setQrCode('');\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Routes>\r\n          <Route path=\"/scanner\" element={<Scanner />} />\r\n          <Route path=\"/admin\" element={<Admin />} />\r\n          <Route path=\"/\" element={\r\n            isMobile ? <Navigate to=\"/scanner\" /> : <Navigate to=\"/admin\" />\r\n          } />\r\n        </Routes>\r\n        {user && qrCode && (\r\n          <div className=\"qr-code-container\">\r\n            <h3>Your QR Code</h3>\r\n            <img src={qrCode} alt=\"QR Code\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}