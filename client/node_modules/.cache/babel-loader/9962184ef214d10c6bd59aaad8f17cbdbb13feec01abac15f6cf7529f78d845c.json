{"ast":null,"code":"var _jsxFileName = \"F:\\\\team4\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRecords = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/attendance');\n        const data = await response.json();\n        setRecords(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching records:', err);\n        setError('Failed to fetch attendance records');\n        setLoading(false);\n      }\n    };\n\n    // Check attendance every 5 seconds\n    const interval = setInterval(fetchRecords, 5000);\n    fetchRecords(); // Initial fetch\n\n    return () => clearInterval(interval);\n  }, []);\n  const addAttendanceRecord = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/attendance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          timestamp: new Date().toISOString(),\n          status: 'Present'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add attendance record');\n      }\n      const newRecord = await response.json();\n      setRecords(prev => [newRecord, ...prev]);\n    } catch (err) {\n      console.error('Error adding record:', err);\n      setError('Failed to add attendance record');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading attendance system...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Attendance System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Automatic Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator active\",\n          children: \"System Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addAttendanceRecord,\n          className: \"record-button\",\n          children: \"Record Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"records-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"records-list\",\n          children: records.map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"record-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"record-time\",\n              children: new Date(record.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"record-status\",\n              children: record.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cJYDdyKbkMyKhASf5CnLhVa8cd4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","records","setRecords","loading","setLoading","error","setError","fetchRecords","response","fetch","data","json","err","console","interval","setInterval","clearInterval","addAttendanceRecord","method","headers","body","JSON","stringify","timestamp","Date","toISOString","status","ok","Error","newRecord","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","record","toLocaleTimeString","id","_c","$RefreshReg$"],"sources":["F:/team4/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\ninterface AttendanceRecord {\r\n  id: string;\r\n  timestamp: string;\r\n  status: string;\r\n}\r\n\r\nfunction App(): JSX.Element {\r\n  const [records, setRecords] = useState<AttendanceRecord[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecords = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/api/attendance');\r\n        const data = await response.json();\r\n        setRecords(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching records:', err);\r\n        setError('Failed to fetch attendance records');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Check attendance every 5 seconds\r\n    const interval = setInterval(fetchRecords, 5000);\r\n    fetchRecords(); // Initial fetch\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const addAttendanceRecord = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/attendance', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          timestamp: new Date().toISOString(),\r\n          status: 'Present'\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to add attendance record');\r\n      }\r\n\r\n      const newRecord = await response.json();\r\n      setRecords(prev => [newRecord, ...prev]);\r\n    } catch (err) {\r\n      console.error('Error adding record:', err);\r\n      setError('Failed to add attendance record');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"loading\">Loading attendance system...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"error\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>AI Attendance System</h1>\r\n        <div className=\"status-container\">\r\n          <h2>Automatic Attendance</h2>\r\n          <div className=\"status-indicator active\">\r\n            System Active\r\n          </div>\r\n          <button onClick={addAttendanceRecord} className=\"record-button\">\r\n            Record Attendance\r\n          </button>\r\n        </div>\r\n        <div className=\"records-container\">\r\n          <h3>Recent Records</h3>\r\n          <div className=\"records-list\">\r\n            {records.map((record: AttendanceRecord) => (\r\n              <div key={record.id} className=\"record-item\">\r\n                <span className=\"record-time\">\r\n                  {new Date(record.timestamp).toLocaleTimeString()}\r\n                </span>\r\n                <span className=\"record-status\">\r\n                  {record.status}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}